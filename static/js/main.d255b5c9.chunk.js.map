{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Top/Top.module.css","components/Section/Bot/Bot.module.css","components/Loader/Loader.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Section/Top/Top.js","components/Section/Bot/Bot.js","components/ContactList/ContactItem/ContactItem.js","components/Loader/Loader.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","axios","defaults","baseURL","getContacts","state","contacts","items","getIsLoading","loading","getError","error","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","map","contact","alert","onSubmit","resetForm","this","className","styles","label","input","type","pattern","title","required","onChange","button","Component","connect","dispatch","post","then","data","catch","addContact","Top","children","style","top","defaultProps","bottom","onClick","id","delete","deleteContact","item","AppLoader","Loader","color","height","width","ContactList","fetchContacts","isLoadingContacts","list","get","App","Bot","itemsReducer","createReducer","_","payload","filterReducer","loadingReducer","errorReducer","contactsReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d255b5c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Vgv2\",\"label\":\"ContactForm_label__2G3ee\",\"input\":\"ContactForm_input__14toP\",\"button\":\"ContactForm_button__3ZJyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Top_title__2b-pE\",\"top\":\"Top_top__2hZsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Bot_title__mIUvP\",\"bottom\":\"Bot_bottom__2aVUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__FnAe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3Yjef\",\"label\":\"Filter_label__1-OWm\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContacts = createAction('contacts/filter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:7777';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact = contact => dispatch => {\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.loading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\nexport const getFilteredContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({name}) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );});","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport styles from './ContactForm.module.css';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    const names = this.props.contacts.map(contact => contact.name);\n\n    names.includes(name)\n      ? alert(`${name} is already in contacts`)\n      : this.props.onSubmit({ ...this.state });\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, handleChange } = this;\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleChange}\n          ></input>\n        </label>\n\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => {\n    return dispatch(addContact(contact));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Top.module.css';\r\n\r\nconst Top = ({ title, children }) => {\r\n  return (\r\n    <section className={style.top}>\r\n      <h2 className={style.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nTop.defaultProps = {\r\n  title: 'New section',\r\n};\r\n\r\nTop.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Top;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Bot.module.css';\r\n\r\nconst Top = ({ title, children }) => {\r\n  return (\r\n    <section className={style.bottom}>\r\n      <h2 className={style.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nTop.defaultProps = {\r\n  title: 'New section',\r\n};\r\n\r\nTop.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Top;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from '../../../redux/contacts/contacts-operations';\nimport { connect } from 'react-redux';\nimport styles from '../ContactList.module.css';\n\nconst ContactItem = ({ id, name, number, onClick }) => {\n  return (\n    <li className={styles.item}>\n      <p className={styles.name}>{name}</p>\n      <p className={styles.number}>{number}</p>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => onClick(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(deleteContact(id)),\n});\n\nContactItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport styles from './Loader.module.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst AppLoader = () => {\n  return (\n    <div className={styles.Loader}>\n      <Loader\n        style={styles}\n        type=\"Puff\"\n        color=\"#a3a7ad\"\n        height={400}\n        width={400}\n      />\n    </div>\n  );\n};\n\nexport default AppLoader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ContactItem from './ContactItem';\nimport Loader from '../Loader';\nimport styles from './ContactList.module.css';\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\nimport {\n  getFilteredContacts,\n  getIsLoading,\n  getError,\n} from '../../redux/contacts/contacts-selectors';\n\nclass ContactList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, isLoadingContacts, error } = this.props;\n\n    return (\n      <>\n        {isLoadingContacts && <Loader />}\n        {error && <h2>404 Not Found</h2>}\n\n        <ul className={styles.list}>\n          {contacts.map(contact => {\n            const { id, name, number } = contact;\n\n            return <ContactItem key={id} name={name} number={number} id={id} />;\n          })}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: getFilteredContacts(state),\n  isLoadingContacts: getIsLoading(state),\n  error: getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: ({ target: { value } }) => dispatch(filterContacts(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\r\nimport ContactForm from './components/ContactForm';\r\nimport Top from './components/Section/Top';\r\nimport Bot from './components/Section/Bot';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Top title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Top>\r\n\r\n      <Bot title=\"Contacts\">\r\n        <Filter />\r\n        <ContactList />\r\n      </Bot>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n} from './contacts-actions';\n\nconst itemsReducer = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nconst loadingReducer = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst errorReducer = createReducer(null, {\n  [fetchContactsRequest]: () => null,\n  [fetchContactsError]: () => true,\n  [addContactRequest]: () => null,\n  [addContactError]: () => true,\n  [deleteContactRequest]: () => null,\n  [deleteContactError]: () => true,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n\nexport default contactsReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import './index.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"ContactList_number__3UQvQ\",\"name\":\"ContactList_name__3QRuv\",\"item\":\"ContactList_item__1nnjs\",\"list\":\"ContactList_list__25Jmi\",\"button\":\"ContactList_button__2kORg\",\"form\":\"ContactList_form__t_enr\"};"],"sourceRoot":""}